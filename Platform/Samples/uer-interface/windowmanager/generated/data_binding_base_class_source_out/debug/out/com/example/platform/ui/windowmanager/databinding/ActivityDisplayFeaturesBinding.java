// Generated by view binder compiler. Do not edit!
package com.example.platform.ui.windowmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.platform.ui.windowmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDisplayFeaturesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView currentState;

  @NonNull
  public final FrameLayout featureContainerLayout;

  @NonNull
  public final ImageView foldColorImageView;

  @NonNull
  public final TextView foldColorTextView;

  @NonNull
  public final RecyclerView infoLogRecyclerView;

  @NonNull
  public final LinearLayout legendLayout;

  @NonNull
  public final TextView legendTextView;

  @NonNull
  public final ConstraintLayout rootLayout;

  private ActivityDisplayFeaturesBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView currentState, @NonNull FrameLayout featureContainerLayout,
      @NonNull ImageView foldColorImageView, @NonNull TextView foldColorTextView,
      @NonNull RecyclerView infoLogRecyclerView, @NonNull LinearLayout legendLayout,
      @NonNull TextView legendTextView, @NonNull ConstraintLayout rootLayout) {
    this.rootView = rootView;
    this.currentState = currentState;
    this.featureContainerLayout = featureContainerLayout;
    this.foldColorImageView = foldColorImageView;
    this.foldColorTextView = foldColorTextView;
    this.infoLogRecyclerView = infoLogRecyclerView;
    this.legendLayout = legendLayout;
    this.legendTextView = legendTextView;
    this.rootLayout = rootLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDisplayFeaturesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDisplayFeaturesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_display_features, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDisplayFeaturesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.current_state;
      TextView currentState = ViewBindings.findChildViewById(rootView, id);
      if (currentState == null) {
        break missingId;
      }

      id = R.id.feature_container_layout;
      FrameLayout featureContainerLayout = ViewBindings.findChildViewById(rootView, id);
      if (featureContainerLayout == null) {
        break missingId;
      }

      id = R.id.foldColorImageView;
      ImageView foldColorImageView = ViewBindings.findChildViewById(rootView, id);
      if (foldColorImageView == null) {
        break missingId;
      }

      id = R.id.foldColorTextView;
      TextView foldColorTextView = ViewBindings.findChildViewById(rootView, id);
      if (foldColorTextView == null) {
        break missingId;
      }

      id = R.id.infoLogRecyclerView;
      RecyclerView infoLogRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (infoLogRecyclerView == null) {
        break missingId;
      }

      id = R.id.legendLayout;
      LinearLayout legendLayout = ViewBindings.findChildViewById(rootView, id);
      if (legendLayout == null) {
        break missingId;
      }

      id = R.id.legendTextView;
      TextView legendTextView = ViewBindings.findChildViewById(rootView, id);
      if (legendTextView == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      return new ActivityDisplayFeaturesBinding((ConstraintLayout) rootView, currentState,
          featureContainerLayout, foldColorImageView, foldColorTextView, infoLogRecyclerView,
          legendLayout, legendTextView, rootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
