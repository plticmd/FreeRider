// Generated by view binder compiler. Do not edit!
package com.example.platform.ui.windowmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.platform.ui.windowmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySplitAttributesTogglePrimaryActivityBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView activityPairSplitAttributesTextView;

  @NonNull
  public final TextView placeholderChooseLayoutTextView;

  @NonNull
  public final Spinner placeholderLayoutDirectionSpinner;

  @NonNull
  public final TextView placeholderLayoutDirectionTextView;

  @NonNull
  public final RadioGroup placeholderSplitLayoutOption;

  @NonNull
  public final Spinner placeholderSplitTypeSpinner;

  @NonNull
  public final TextView placeholderSplitTypeTextView;

  @NonNull
  public final RadioButton placeholderUseCustomizedSplitAttributes;

  @NonNull
  public final RadioButton placeholderUseDefaultSplitAttributes;

  @NonNull
  public final RadioButton placeholderUseFoldingAwareSplitAttributes;

  @NonNull
  public final ScrollView rootSplitActivityLayout;

  @NonNull
  public final TextView splitRuleChooseLayoutTextView;

  @NonNull
  public final Spinner splitRuleLayoutDirectionSpinner;

  @NonNull
  public final TextView splitRuleLayoutDirectionTextView;

  @NonNull
  public final RadioGroup splitRuleSplitLayoutOption;

  @NonNull
  public final Spinner splitRuleSplitTypeSpinner;

  @NonNull
  public final TextView splitRuleSplitTypeTextView;

  @NonNull
  public final RadioButton splitRuleUseCustomizedSplitAttributes;

  @NonNull
  public final RadioButton splitRuleUseFoldingAwareSplitAttributes;

  @NonNull
  public final RadioButton splitRuleUseSingleSplitAttributes;

  @NonNull
  public final Button startActivityPairButton;

  @NonNull
  public final Button startPrimaryActivityButton;

  @NonNull
  public final CheckBox usePlaceholderCheckBox;

  @NonNull
  public final CheckBox useSplitRuleCheckBox;

  @NonNull
  public final CheckBox useStickyPlaceholderCheckBox;

  private ActivitySplitAttributesTogglePrimaryActivityBinding(@NonNull ScrollView rootView,
      @NonNull TextView activityPairSplitAttributesTextView,
      @NonNull TextView placeholderChooseLayoutTextView,
      @NonNull Spinner placeholderLayoutDirectionSpinner,
      @NonNull TextView placeholderLayoutDirectionTextView,
      @NonNull RadioGroup placeholderSplitLayoutOption,
      @NonNull Spinner placeholderSplitTypeSpinner, @NonNull TextView placeholderSplitTypeTextView,
      @NonNull RadioButton placeholderUseCustomizedSplitAttributes,
      @NonNull RadioButton placeholderUseDefaultSplitAttributes,
      @NonNull RadioButton placeholderUseFoldingAwareSplitAttributes,
      @NonNull ScrollView rootSplitActivityLayout, @NonNull TextView splitRuleChooseLayoutTextView,
      @NonNull Spinner splitRuleLayoutDirectionSpinner,
      @NonNull TextView splitRuleLayoutDirectionTextView,
      @NonNull RadioGroup splitRuleSplitLayoutOption, @NonNull Spinner splitRuleSplitTypeSpinner,
      @NonNull TextView splitRuleSplitTypeTextView,
      @NonNull RadioButton splitRuleUseCustomizedSplitAttributes,
      @NonNull RadioButton splitRuleUseFoldingAwareSplitAttributes,
      @NonNull RadioButton splitRuleUseSingleSplitAttributes,
      @NonNull Button startActivityPairButton, @NonNull Button startPrimaryActivityButton,
      @NonNull CheckBox usePlaceholderCheckBox, @NonNull CheckBox useSplitRuleCheckBox,
      @NonNull CheckBox useStickyPlaceholderCheckBox) {
    this.rootView = rootView;
    this.activityPairSplitAttributesTextView = activityPairSplitAttributesTextView;
    this.placeholderChooseLayoutTextView = placeholderChooseLayoutTextView;
    this.placeholderLayoutDirectionSpinner = placeholderLayoutDirectionSpinner;
    this.placeholderLayoutDirectionTextView = placeholderLayoutDirectionTextView;
    this.placeholderSplitLayoutOption = placeholderSplitLayoutOption;
    this.placeholderSplitTypeSpinner = placeholderSplitTypeSpinner;
    this.placeholderSplitTypeTextView = placeholderSplitTypeTextView;
    this.placeholderUseCustomizedSplitAttributes = placeholderUseCustomizedSplitAttributes;
    this.placeholderUseDefaultSplitAttributes = placeholderUseDefaultSplitAttributes;
    this.placeholderUseFoldingAwareSplitAttributes = placeholderUseFoldingAwareSplitAttributes;
    this.rootSplitActivityLayout = rootSplitActivityLayout;
    this.splitRuleChooseLayoutTextView = splitRuleChooseLayoutTextView;
    this.splitRuleLayoutDirectionSpinner = splitRuleLayoutDirectionSpinner;
    this.splitRuleLayoutDirectionTextView = splitRuleLayoutDirectionTextView;
    this.splitRuleSplitLayoutOption = splitRuleSplitLayoutOption;
    this.splitRuleSplitTypeSpinner = splitRuleSplitTypeSpinner;
    this.splitRuleSplitTypeTextView = splitRuleSplitTypeTextView;
    this.splitRuleUseCustomizedSplitAttributes = splitRuleUseCustomizedSplitAttributes;
    this.splitRuleUseFoldingAwareSplitAttributes = splitRuleUseFoldingAwareSplitAttributes;
    this.splitRuleUseSingleSplitAttributes = splitRuleUseSingleSplitAttributes;
    this.startActivityPairButton = startActivityPairButton;
    this.startPrimaryActivityButton = startPrimaryActivityButton;
    this.usePlaceholderCheckBox = usePlaceholderCheckBox;
    this.useSplitRuleCheckBox = useSplitRuleCheckBox;
    this.useStickyPlaceholderCheckBox = useStickyPlaceholderCheckBox;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySplitAttributesTogglePrimaryActivityBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySplitAttributesTogglePrimaryActivityBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_split_attributes_toggle_primary_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySplitAttributesTogglePrimaryActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_pair_split_attributes_text_view;
      TextView activityPairSplitAttributesTextView = ViewBindings.findChildViewById(rootView, id);
      if (activityPairSplitAttributesTextView == null) {
        break missingId;
      }

      id = R.id.placeholder_choose_layout_text_view;
      TextView placeholderChooseLayoutTextView = ViewBindings.findChildViewById(rootView, id);
      if (placeholderChooseLayoutTextView == null) {
        break missingId;
      }

      id = R.id.placeholder_layout_direction_spinner;
      Spinner placeholderLayoutDirectionSpinner = ViewBindings.findChildViewById(rootView, id);
      if (placeholderLayoutDirectionSpinner == null) {
        break missingId;
      }

      id = R.id.placeholder_layout_direction_text_view;
      TextView placeholderLayoutDirectionTextView = ViewBindings.findChildViewById(rootView, id);
      if (placeholderLayoutDirectionTextView == null) {
        break missingId;
      }

      id = R.id.placeholder_split_layout_option;
      RadioGroup placeholderSplitLayoutOption = ViewBindings.findChildViewById(rootView, id);
      if (placeholderSplitLayoutOption == null) {
        break missingId;
      }

      id = R.id.placeholder_split_type_spinner;
      Spinner placeholderSplitTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (placeholderSplitTypeSpinner == null) {
        break missingId;
      }

      id = R.id.placeholder_split_type_text_view;
      TextView placeholderSplitTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (placeholderSplitTypeTextView == null) {
        break missingId;
      }

      id = R.id.placeholder_use_customized_split_attributes;
      RadioButton placeholderUseCustomizedSplitAttributes = ViewBindings.findChildViewById(rootView, id);
      if (placeholderUseCustomizedSplitAttributes == null) {
        break missingId;
      }

      id = R.id.placeholder_use_default_split_attributes;
      RadioButton placeholderUseDefaultSplitAttributes = ViewBindings.findChildViewById(rootView, id);
      if (placeholderUseDefaultSplitAttributes == null) {
        break missingId;
      }

      id = R.id.placeholder_use_folding_aware_split_attributes;
      RadioButton placeholderUseFoldingAwareSplitAttributes = ViewBindings.findChildViewById(rootView, id);
      if (placeholderUseFoldingAwareSplitAttributes == null) {
        break missingId;
      }

      ScrollView rootSplitActivityLayout = (ScrollView) rootView;

      id = R.id.split_rule_choose_layout_text_view;
      TextView splitRuleChooseLayoutTextView = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleChooseLayoutTextView == null) {
        break missingId;
      }

      id = R.id.split_rule_layout_direction_spinner;
      Spinner splitRuleLayoutDirectionSpinner = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleLayoutDirectionSpinner == null) {
        break missingId;
      }

      id = R.id.split_rule_layout_direction_text_view;
      TextView splitRuleLayoutDirectionTextView = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleLayoutDirectionTextView == null) {
        break missingId;
      }

      id = R.id.split_rule_split_layout_option;
      RadioGroup splitRuleSplitLayoutOption = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleSplitLayoutOption == null) {
        break missingId;
      }

      id = R.id.split_rule_split_type_spinner;
      Spinner splitRuleSplitTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleSplitTypeSpinner == null) {
        break missingId;
      }

      id = R.id.split_rule_split_type_text_view;
      TextView splitRuleSplitTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleSplitTypeTextView == null) {
        break missingId;
      }

      id = R.id.split_rule_use_customized_split_attributes;
      RadioButton splitRuleUseCustomizedSplitAttributes = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleUseCustomizedSplitAttributes == null) {
        break missingId;
      }

      id = R.id.split_rule_use_folding_aware_split_attributes;
      RadioButton splitRuleUseFoldingAwareSplitAttributes = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleUseFoldingAwareSplitAttributes == null) {
        break missingId;
      }

      id = R.id.split_rule_use_single_split_attributes;
      RadioButton splitRuleUseSingleSplitAttributes = ViewBindings.findChildViewById(rootView, id);
      if (splitRuleUseSingleSplitAttributes == null) {
        break missingId;
      }

      id = R.id.start_activity_pair_button;
      Button startActivityPairButton = ViewBindings.findChildViewById(rootView, id);
      if (startActivityPairButton == null) {
        break missingId;
      }

      id = R.id.start_primary_activity_button;
      Button startPrimaryActivityButton = ViewBindings.findChildViewById(rootView, id);
      if (startPrimaryActivityButton == null) {
        break missingId;
      }

      id = R.id.use_placeholder_check_box;
      CheckBox usePlaceholderCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (usePlaceholderCheckBox == null) {
        break missingId;
      }

      id = R.id.use_split_rule_check_box;
      CheckBox useSplitRuleCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (useSplitRuleCheckBox == null) {
        break missingId;
      }

      id = R.id.use_sticky_placeholder_check_box;
      CheckBox useStickyPlaceholderCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (useStickyPlaceholderCheckBox == null) {
        break missingId;
      }

      return new ActivitySplitAttributesTogglePrimaryActivityBinding((ScrollView) rootView,
          activityPairSplitAttributesTextView, placeholderChooseLayoutTextView,
          placeholderLayoutDirectionSpinner, placeholderLayoutDirectionTextView,
          placeholderSplitLayoutOption, placeholderSplitTypeSpinner, placeholderSplitTypeTextView,
          placeholderUseCustomizedSplitAttributes, placeholderUseDefaultSplitAttributes,
          placeholderUseFoldingAwareSplitAttributes, rootSplitActivityLayout,
          splitRuleChooseLayoutTextView, splitRuleLayoutDirectionSpinner,
          splitRuleLayoutDirectionTextView, splitRuleSplitLayoutOption, splitRuleSplitTypeSpinner,
          splitRuleSplitTypeTextView, splitRuleUseCustomizedSplitAttributes,
          splitRuleUseFoldingAwareSplitAttributes, splitRuleUseSingleSplitAttributes,
          startActivityPairButton, startPrimaryActivityButton, usePlaceholderCheckBox,
          useSplitRuleCheckBox, useStickyPlaceholderCheckBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
