// Source code is decompiled from a .class file using FernFlower decompiler.
package com.example.platform.ui.windowmanager;

import android.app.Activity;
import android.content.res.Configuration;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.compose.runtime.internal.StabilityInferred;
import androidx.recyclerview.widget.RecyclerView;
import androidx.window.core.layout.WindowSizeClass;
import androidx.window.layout.WindowMetrics;
import androidx.window.layout.WindowMetricsCalculator;
import com.example.platform.ui.windowmanager.LiveLiterals.WindowMetricsActivityKt;
import com.example.platform.ui.windowmanager.R.id;
import com.example.platform.ui.windowmanager.R.layout;
import com.example.platform.ui.windowmanager.infolog.InfoLogAdapter;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(
   mv = {1, 8, 0},
   k = 1,
   xi = 48,
   d1 = {"\u0000(\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0007\u0018\u00002\u00020\u0001B\u0005\u00a2\u0006\u0002\u0010\u0002J\u0010\u0010\u0005\u001a\u00020\u00062\u0006\u0010\u0007\u001a\u00020\bH\u0016J\u0012\u0010\t\u001a\u00020\u00062\b\u0010\n\u001a\u0004\u0018\u00010\u000bH\u0014J\b\u0010\f\u001a\u00020\u0006H\u0002R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\r"},
   d2 = {"Lcom/example/platform/ui/windowmanager/WindowMetricsActivity;", "Landroidx/appcompat/app/AppCompatActivity;", "()V", "adapter", "Lcom/example/platform/ui/windowmanager/infolog/InfoLogAdapter;", "onConfigurationChanged", "", "newConfig", "Landroid/content/res/Configuration;", "onCreate", "savedInstanceState", "Landroid/os/Bundle;", "updateMetrics", "windowmanager_debug"}
)
@StabilityInferred(
   parameters = 0
)
public final class WindowMetricsActivity extends AppCompatActivity {
   @NotNull
   private final InfoLogAdapter adapter = new InfoLogAdapter();
   public static final int $stable;

   public WindowMetricsActivity() {
   }

   protected void onCreate(@Nullable Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      this.setContentView(layout.activity_window_metrics);
      ((RecyclerView)this.findViewById(id.recycler_view)).setAdapter((RecyclerView.Adapter)this.adapter);
      this.adapter.append(WindowMetricsActivityKt.INSTANCE.String$arg-0$call-append$fun-onCreate$class-WindowMetricsActivity(), WindowMetricsActivityKt.INSTANCE.String$arg-1$call-append$fun-onCreate$class-WindowMetricsActivity());
      this.updateMetrics();
   }

   public void onConfigurationChanged(@NotNull Configuration newConfig) {
      Intrinsics.checkNotNullParameter(newConfig, "newConfig");
      super.onConfigurationChanged(newConfig);
      this.updateMetrics();
   }

   private final void updateMetrics() {
      WindowMetrics windowMetrics = WindowMetricsCalculator.Companion.getOrCreate().computeCurrentWindowMetrics((Activity)this);
      int width = windowMetrics.getBounds().width();
      int height = windowMetrics.getBounds().height();
      float density = this.getResources().getDisplayMetrics().density;
      WindowSizeClass windowSizeClass = WindowSizeClass.Companion.compute((float)width / density, (float)height / density);
      InfoLogAdapter var10000 = this.adapter;
      String var10001 = WindowMetricsActivityKt.INSTANCE.String$arg-0$call-append$fun-updateMetrics$class-WindowMetricsActivity();
      String var10002 = WindowMetricsActivityKt.INSTANCE.String$0$str$arg-1$call-append$fun-updateMetrics$class-WindowMetricsActivity();
      var10000.append(var10001, var10002 + width + WindowMetricsActivityKt.INSTANCE.String$2$str$arg-1$call-append$fun-updateMetrics$class-WindowMetricsActivity() + height);
      var10000 = this.adapter;
      var10001 = WindowMetricsActivityKt.INSTANCE.String$arg-0$call-append-1$fun-updateMetrics$class-WindowMetricsActivity();
      var10002 = WindowMetricsActivityKt.INSTANCE.String$$this$call-plus$$this$call-plus$$this$call-plus$arg-1$call-append-1$fun-updateMetrics$class-WindowMetricsActivity();
      var10000.append(var10001, var10002 + windowSizeClass.getWindowHeightSizeClass() + WindowMetricsActivityKt.INSTANCE.String$arg-0$call-plus$$this$call-plus$arg-1$call-append-1$fun-updateMetrics$class-WindowMetricsActivity() + windowSizeClass.getWindowWidthSizeClass());
      this.adapter.notifyDataSetChanged();
   }

   static {
      $stable = WindowMetricsActivityKt.INSTANCE.Int$class-WindowMetricsActivity();
   }
}
