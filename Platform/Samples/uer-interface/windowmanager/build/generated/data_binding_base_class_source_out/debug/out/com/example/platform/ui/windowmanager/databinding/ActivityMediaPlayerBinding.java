// Generated by view binder compiler. Do not edit!
package com.example.platform.ui.windowmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.constraintlayout.widget.ReactiveGuide;
import androidx.media3.ui.PlayerControlView;
import androidx.media3.ui.PlayerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.platform.ui.windowmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMediaPlayerBinding implements ViewBinding {
  @NonNull
  private final MotionLayout rootView;

  @NonNull
  public final PlayerControlView controlView;

  @NonNull
  public final ReactiveGuide fold;

  @NonNull
  public final PlayerView playerView;

  @NonNull
  public final MotionLayout root;

  private ActivityMediaPlayerBinding(@NonNull MotionLayout rootView,
      @NonNull PlayerControlView controlView, @NonNull ReactiveGuide fold,
      @NonNull PlayerView playerView, @NonNull MotionLayout root) {
    this.rootView = rootView;
    this.controlView = controlView;
    this.fold = fold;
    this.playerView = playerView;
    this.root = root;
  }

  @Override
  @NonNull
  public MotionLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMediaPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMediaPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_media_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMediaPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.control_view;
      PlayerControlView controlView = ViewBindings.findChildViewById(rootView, id);
      if (controlView == null) {
        break missingId;
      }

      id = R.id.fold;
      ReactiveGuide fold = ViewBindings.findChildViewById(rootView, id);
      if (fold == null) {
        break missingId;
      }

      id = R.id.player_view;
      PlayerView playerView = ViewBindings.findChildViewById(rootView, id);
      if (playerView == null) {
        break missingId;
      }

      MotionLayout root = (MotionLayout) rootView;

      return new ActivityMediaPlayerBinding((MotionLayout) rootView, controlView, fold, playerView,
          root);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
